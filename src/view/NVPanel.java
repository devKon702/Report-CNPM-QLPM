
package view;

import com.toedter.calendar.JDateChooser;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.JTextField;
import dao.NhanVienDAO;
import dao.TaiKhoanDAO;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
import javax.swing.table.DefaultTableModel;
import model.InputValidator;
import model.NhanVien;
import model.TaiKhoan;
import view.QLNV.CapNhatNV;
import view.QLNV.ThemNV;

public class NVPanel extends javax.swing.JPanel {

    private AdminPanel pr;

    public NVPanel(AdminPanel pr) {
        initComponents();
        this.pr = pr;
        //QLNVController ctrl = new QLNVController(this);
        refresh();
    }

    public void refresh() {
        DefaultTableModel model = (DefaultTableModel) jtbNhanVien.getModel();
        model.setRowCount(0);
        for (NhanVien x : new NhanVienDAO().getAll()) {
            TaiKhoan tt = new TaiKhoanDAO().get(x.getMa());
            String ghiChu = "";
            if (tt != null) {
                switch (tt.getQuyen()) {
                    case 1:
                        ghiChu = "Admin";
                        break;
                    case 2:
                        ghiChu = "Nhân viên";
                        break;
                    case 0:
                        ghiChu = "Khóa tài khoản";
                }
            } else {
                ghiChu = "Chưa có tài khoản";
            }
            model.addRow(new Object[]{x.getMa(), x.getTen(), x.getCccd(), x.getEmail(), x.getSdt(), ghiChu});
        }
        jtfTen.setText("");
        jtfCCCD.setText("");
        jtfEmail.setText("");
        jtfSDT.setText("");
    }

    public void filterRows() {
        String text = jtfTim.getText();
        if (text.length() == 0) {
            DefaultTableModel model = (DefaultTableModel) jtbNhanVien.getModel();
            model.setRowCount(0);
            for (NhanVien x : new NhanVienDAO().getAll()) {
                TaiKhoan tt = new TaiKhoanDAO().get(x.getMa());
                String ghiChu = "";
                if (tt != null) {
                    switch (tt.getQuyen()) {
                        case 1:
                            ghiChu = "Admin";
                            break;
                        case 2:
                            ghiChu = "Nhân viên";
                            break;
                        case 0:
                            ghiChu = "Khóa tài khoản";
                    }
                } else {
                    ghiChu = "Chưa có tài khoản";
                }
                model.addRow(new Object[]{x.getMa(), x.getTen(), x.getCccd(), x.getEmail(), x.getSdt(), ghiChu});
            }
        } else {
            DefaultTableModel model = (DefaultTableModel) jtbNhanVien.getModel();
            model.setRowCount(0);
            for (NhanVien x : new NhanVienDAO().getAll()) {
                if (x.getTen().contains(text) || x.getCccd().contains(text) || x.getEmail().contains(text)) {
                    TaiKhoan tt = new TaiKhoanDAO().get(x.getMa());
                    String ghiChu = "";
                    if (tt != null) {
                        switch (tt.getQuyen()) {
                            case 1:
                                ghiChu = "Admin";
                                break;
                            case 2:
                                ghiChu = "Nhân viên";
                                break;
                            case 0:
                                ghiChu = "Khóa tài khoản";
                        }
                    } else {
                        ghiChu = "Chưa có tài khoản";
                    }
                    model.addRow(new Object[]{x.getMa(), x.getTen(), x.getCccd(), x.getEmail(), x.getSdt(), ghiChu});
                }
            }
        }
    }

    public String getStringDate(Date date) {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat.format(date);
    }

    public Date getDate(String date) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat.parse(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbNhanVien = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jtfTen = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfSDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jdcNgayLam = new com.toedter.calendar.JDateChooser();
        jtfCCCD = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jbtnThem = new javax.swing.JButton();
        jtfTim = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jtbNhanVien.setAutoCreateRowSorter(true);
        jtbNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "CCCD", "Email", "SĐT", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbNhanVien.setRowHeight(30);
        jtbNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbNhanVien);
        if (jtbNhanVien.getColumnModel().getColumnCount() > 0) {
            jtbNhanVien.getColumnModel().getColumn(0).setResizable(false);
            jtbNhanVien.getColumnModel().getColumn(0).setPreferredWidth(50);
            jtbNhanVien.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setText("Tên");

        jLabel3.setText("Ngày làm");

        jLabel4.setText("Email");

        jLabel5.setText("SĐT");

        jdcNgayLam.setDateFormatString("dd - MM - yyyy");
        jdcNgayLam.setEnabled(false);
        jdcNgayLam.setFocusable(false);

        jLabel6.setText("CCCD");

        jbtnThem.setBackground(new java.awt.Color(153, 255, 153));
        jbtnThem.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jbtnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/done_outline.png"))); // NOI18N
        jbtnThem.setText("Thêm");
        jbtnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfCCCD)
                    .addComponent(jtfTen)
                    .addComponent(jdcNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jtfSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jtfEmail))
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel3))
                            .addComponent(jdcNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );

        jtfTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTimKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Tìm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTim))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTim, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThemActionPerformed

        if (jtfTen.getText().trim().equals("") || jtfCCCD.getText().trim().equals("") || jtfEmail.getText().trim().equals("") || jtfSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Các thông tin tên, cccd, email,số điện thoại không được để trống");
            return;
        }
        if (!InputValidator.validateFullName(jtfTen.getText())) {
            JOptionPane.showMessageDialog(this, "Tên không được chứa số và kí tự đặc biệt");
            return;
        }
        if(jtfTen.getText().trim().length()>50){
            JOptionPane.showMessageDialog(this, "Tên không được quá 50 kí tự");
            return;
        }
        if (!InputValidator.validateIdentityCard(jtfCCCD.getText())) {
            JOptionPane.showMessageDialog(this, "CCCD chỉ bao gồm 10 hoặc 12 kí tự số, vui lòng kiểm tra lại");
            return;
        }
        if(new NhanVienDAO().getNhanVien_CCCD(jtfCCCD.getText()) != null){
            JOptionPane.showMessageDialog(this, "Trùng CCCD, hãy kiểm tra lại");
            return;
        }
        if (!InputValidator.validateEmail(jtfEmail.getText())) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ, vui lòng kiểm tra lại email\nVí dụ: xxx@gmail.com");
            return;
        }
        if (!InputValidator.validatePhoneNumber(jtfSDT.getText())) {
            JOptionPane.showMessageDialog(this, "Số điện thoại bắt đầu là 0 và 9 kí tự số liền kề, vui lòng kiểm tra lại");
            return;
        }
        new ThemNV(this).setVisible(true);
    }//GEN-LAST:event_jbtnThemActionPerformed

    private void jtfTimKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_0) {
            filterRows();
        }
    }//GEN-LAST:event_jtfTimKeyTyped

    private void jtfTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            filterRows();
        }
    }//GEN-LAST:event_jtfTimKeyReleased

    private void jtbNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbNhanVienMouseClicked
        int index = jtbNhanVien.getSelectedRow();
        if (evt.getClickCount() == 2 && index != -1) {
            NhanVien a = new NhanVienDAO().get((String) jtbNhanVien.getValueAt(index, 0));
            if (a.getMa().equals(getPr().getMf().getUserName())) {
                JOptionPane.showMessageDialog(this, "Tài khoản hiện tại");
            } else {
                new CapNhatNV(a, this).setVisible(true);
            }
        }
    }//GEN-LAST:event_jtbNhanVienMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnThem;
    private com.toedter.calendar.JDateChooser jdcNgayLam;
    private javax.swing.JTable jtbNhanVien;
    private javax.swing.JTextField jtfCCCD;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfSDT;
    private javax.swing.JTextField jtfTen;
    private javax.swing.JTextField jtfTim;
    // End of variables declaration//GEN-END:variables

    public AdminPanel getPr() {
        return this.pr;
    }

    public JDateChooser getJdcNgayLam() {
        return jdcNgayLam;
    }

    public JTable getJtbNhanVien() {
        return jtbNhanVien;
    }

    public JTextField getJtfEmail() {
        return jtfEmail;
    }

    public JTextField getJtfSDT() {
        return jtfSDT;
    }

    public JTextField getJtfTen() {
        return jtfTen;
    }

    public JTextField getJtfCCCD() {
        return jtfCCCD;
    }

    public JTextField getJtfTimTen() {
        return jtfTim;
    }

}
