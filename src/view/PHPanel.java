
package view;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import dao.PhongHocDAO;
import dao.TrangThaiDAO;
import java.awt.event.KeyEvent;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import model.PhongHoc;
import model.ThietBi;
import model.TrangThai;
import view.QLPH.ThemPH;
import view.QLPH.XoaSuaPH;


public class PHPanel extends javax.swing.JPanel {
    private NhanVienPanel pr;
    private ArrayList<String> checkTrangThai;
    
    public PHPanel(NhanVienPanel pr) {
        initComponents();
        this.pr = pr;
        checkTrangThai = new ArrayList<>();
        for(TrangThai x : new PhongHocDAO().getTrangThaiPhongHoc()){
            checkTrangThai.add(x.getTen());
        }
        if(checkTrangThai.size() == 3){
            jcb1.setText(checkTrangThai.get(0));
            jcb2.setText(checkTrangThai.get(1));
            jcb3.setText(checkTrangThai.get(2));
            jcb1.setSelected(true);
            jcb2.setSelected(true);
            jcb3.setSelected(true);
        }
        //QLPHController ctrl = new QLPHController(this);
        initTable();
    }
    
    public void refresh(){
        jtfTimPhong.setText("");
        initTable();
        jcb1.setSelected(true);
        jcb2.setSelected(true);
        jcb3.setSelected(true);
    }
    
    public void filterRows(){
        String maPhong = jtfTimPhong.getText().toUpperCase().trim();
        DefaultTableModel model = (DefaultTableModel) jtbPhongHoc.getModel();
        model.setRowCount(0);
        if(maPhong.length()!=0){
            for(PhongHoc x : new PhongHocDAO().getAll()){
                if(checkTrangThai.contains(new TrangThaiDAO().getTenTrangThai(x.getMaTrangThai())) && x.getMaPhong().contains(maPhong)){
                    String ct = "";
                    Map<String,ArrayList<ThietBi>> tmp = x.getMapLoai_ThietBi();
                    for(String loai : tmp.keySet()){
                        ct += tmp.get(loai).size() + " " + loai + ", ";
                    }
                    model.addRow(new Object[]{x.getMaPhong(),ct,new TrangThaiDAO().getTenTrangThai(x.getMaTrangThai())});
                }
            }
        }
        else{
            for(PhongHoc x : new PhongHocDAO().getAll()){
                if(checkTrangThai.contains(new TrangThaiDAO().getTenTrangThai(x.getMaTrangThai()))){
                    String ct = "";
                    Map<String,ArrayList<ThietBi>> tmp = x.getMapLoai_ThietBi();
                    for(String loai : tmp.keySet()){
                        ct += tmp.get(loai).size() + " " + loai + ", ";
                    }
                    model.addRow(new Object[]{x.getMaPhong(),ct,new TrangThaiDAO().getTenTrangThai(x.getMaTrangThai())});
                }
            }
        }
    }
    public void initTable(){
        DefaultTableModel model = (DefaultTableModel) jtbPhongHoc.getModel();
        model.setRowCount(0);
        for(PhongHoc x : new PhongHocDAO().getAll()){
            String ct = "";
            Map<String,ArrayList<ThietBi>> tmp = x.getMapLoai_ThietBi();
            for(String loai : tmp.keySet()){
                ct += tmp.get(loai).size() + " " + loai + ", ";
            }
            model.addRow(new Object[]{x.getMaPhong(),ct,new TrangThaiDAO().getTenTrangThai(x.getMaTrangThai())});
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbPhongHoc = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jtfTimPhong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jcb3 = new javax.swing.JCheckBox();
        jcb2 = new javax.swing.JCheckBox();
        jcb1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jtbPhongHoc.setAutoCreateRowSorter(true);
        jtbPhongHoc.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jtbPhongHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã phòng", "Thiết bị", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbPhongHoc.setRowHeight(30);
        jtbPhongHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbPhongHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbPhongHoc);
        if (jtbPhongHoc.getColumnModel().getColumnCount() > 0) {
            jtbPhongHoc.getColumnModel().getColumn(0).setMinWidth(50);
            jtbPhongHoc.getColumnModel().getColumn(0).setPreferredWidth(200);
            jtbPhongHoc.getColumnModel().getColumn(0).setMaxWidth(300);
            jtbPhongHoc.getColumnModel().getColumn(1).setMinWidth(400);
            jtbPhongHoc.getColumnModel().getColumn(1).setPreferredWidth(600);
            jtbPhongHoc.getColumnModel().getColumn(1).setMaxWidth(1000);
        }

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jtfTimPhong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimPhongKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Phòng");

        jcb3.setText("Bảo trì");
        jcb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb3ActionPerformed(evt);
            }
        });

        jcb2.setText("Mượn");
        jcb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb2ActionPerformed(evt);
            }
        });

        jcb1.setText("Trống");
        jcb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jcb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcb2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcb3)
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb3)
                    .addComponent(jcb2)
                    .addComponent(jcb1))
                .addGap(6, 6, 6))
        );

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Trạng thái");

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/autorenew.png"))); // NOI18N
        jButton1.setText("Tải lại");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setText("Thêm");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jtfTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(320, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        refresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new ThemPH(this).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jtbPhongHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbPhongHocMouseClicked
        if(evt.getClickCount() == 2 && jtbPhongHoc.getSelectedRow() != -1){
                    String maPhong = (String)jtbPhongHoc.getValueAt(jtbPhongHoc.getSelectedRow(), 0);
                    PhongHoc ph = new PhongHocDAO().getPhongHoc(maPhong);
                    if(new TrangThaiDAO().getTenTrangThai(ph.getMaTrangThai()).equals("Đang mượn")){
                        JOptionPane.showMessageDialog(this, "Phòng học đang được mượn");
                    }
                    else{
                        new XoaSuaPH(this,ph).setVisible(true);
                    }
                }
    }//GEN-LAST:event_jtbPhongHocMouseClicked

    private void jcb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb1ActionPerformed
        JCheckBox x = (JCheckBox)evt.getSource();
        if(x.isSelected()){
            checkTrangThai.add(x.getText());
        }
        else checkTrangThai.remove(x.getText());
        filterRows();
    }//GEN-LAST:event_jcb1ActionPerformed

    private void jcb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb2ActionPerformed
        JCheckBox x = (JCheckBox)evt.getSource();
        if(x.isSelected()){
            checkTrangThai.add(x.getText());
        }
        else checkTrangThai.remove(x.getText());
        filterRows();
    }//GEN-LAST:event_jcb2ActionPerformed

    private void jcb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb3ActionPerformed
        JCheckBox x = (JCheckBox)evt.getSource();
        if(x.isSelected()){
            checkTrangThai.add(x.getText());
        }
        else checkTrangThai.remove(x.getText());
        filterRows();
    }//GEN-LAST:event_jcb3ActionPerformed

    private void jtfTimPhongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimPhongKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            filterRows();
        }
    }//GEN-LAST:event_jtfTimPhongKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcb1;
    private javax.swing.JCheckBox jcb2;
    private javax.swing.JCheckBox jcb3;
    private javax.swing.JTable jtbPhongHoc;
    private javax.swing.JTextField jtfTimPhong;
    // End of variables declaration//GEN-END:variables

    public NhanVienPanel getPr() {
        return pr;
    }

    public ArrayList<String> getCheckTrangThai() {
        return checkTrangThai;
    }

    public JCheckBox getJcb1() {
        return jcb1;
    }

    public JCheckBox getJcb2() {
        return jcb2;
    }

    public JCheckBox getJcb3() {
        return jcb3;
    }
    
    public JTable getJtbPhongHoc() {
        return jtbPhongHoc;
    }

    public JTextField getJtfTimPhong() {
        return jtfTimPhong;
    }
}
