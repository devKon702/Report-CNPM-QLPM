/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.QLPM;

import database.DatabaseHelper;
import database.SinhVien;
import database.ThietBi;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import model.InputValidator;
import view.TCPanel;

public class LapPhieuMuon extends javax.swing.JFrame {

    public LapPhieuMuon(TCPanel root) {
        initComponents();
        this.root = root;
        this.tentk = root.getTk();
        this.jlbPhong.setText(root.getPhongHocLabel());
        themThietBi();
        this.setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12_mssv = new javax.swing.JLabel();
        jtf_mssv = new javax.swing.JTextField();
        jLabel13_sdt = new javax.swing.JLabel();
        jtf_sdt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbtn_CapNhat = new javax.swing.JButton();
        jcmbHan = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel1_name_phong = new javax.swing.JLabel();
        jLabel3_name_pm = new javax.swing.JLabel();
        jLabel4_mssv_pm = new javax.swing.JLabel();
        jLabel5_tg_muon = new javax.swing.JLabel();
        jLabel6_tg_tra = new javax.swing.JLabel();
        jlbTenSV = new javax.swing.JLabel();
        jlbMSSV = new javax.swing.JLabel();
        jlbThoiGianMuon = new javax.swing.JLabel();
        jlbHan = new javax.swing.JLabel();
        jLabel15_sdt_pm = new javax.swing.JLabel();
        jlbSDT = new javax.swing.JLabel();
        jLabel17_email_pm = new javax.swing.JLabel();
        jlbEmail = new javax.swing.JLabel();
        jlbPhong = new javax.swing.JLabel();
        jLabel_tt = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jlabel_micro = new javax.swing.JLabel();
        jlabel_Remote = new javax.swing.JLabel();
        jlabel_TypeC = new javax.swing.JLabel();
        jlabel_HDMI = new javax.swing.JLabel();
        jbtn_XacNhan = new javax.swing.JButton();
        jlabel_Key = new javax.swing.JLabel();
        jPanel_Key = new javax.swing.JPanel();
        jPanel_REMOTE = new javax.swing.JPanel();
        jlabel_daymr = new javax.swing.JLabel();
        jPanel_DayMicro = new javax.swing.JPanel();
        jPanel_HDMI = new javax.swing.JPanel();
        jPanel_TYPEC = new javax.swing.JPanel();
        jPanel_MICRO = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tạo phiếu mượn");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel12_mssv.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel12_mssv.setText("MSSV");

        jtf_mssv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_mssvActionPerformed(evt);
            }
        });

        jLabel13_sdt.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel13_sdt.setText("SĐT");

        jtf_sdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_sdtActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Hạn trả");

        jbtn_CapNhat.setBackground(new java.awt.Color(153, 204, 255));
        jbtn_CapNhat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbtn_CapNhat.setText("Cập nhật");
        jbtn_CapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_CapNhatActionPerformed(evt);
            }
        });

        jcmbHan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "11:00","17:00","21:00" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtn_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13_sdt)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12_mssv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_mssv, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtf_sdt)
                                .addComponent(jcmbHan, 0, 200, Short.MAX_VALUE)))))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12_mssv)
                    .addComponent(jtf_mssv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13_sdt))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbHan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jbtn_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1_name_phong.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1_name_phong.setText("Tên phòng:");

        jLabel3_name_pm.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3_name_pm.setText("Tên:");

        jLabel4_mssv_pm.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4_mssv_pm.setText("MSSV:");

        jLabel5_tg_muon.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel5_tg_muon.setText("Thời gian mượn:");

        jLabel6_tg_tra.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6_tg_tra.setText("Hạn trả:");

        jlbTenSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlbMSSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlbThoiGianMuon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlbHan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel15_sdt_pm.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel15_sdt_pm.setText("SĐT:");

        jlbSDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlbSDT.setToolTipText("");

        jLabel17_email_pm.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel17_email_pm.setText("Email:");

        jlbEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlbPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel_tt.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel_tt.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17_email_pm)
                        .addGap(18, 18, 18)
                        .addComponent(jlbEmail))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15_sdt_pm)
                        .addGap(18, 18, 18)
                        .addComponent(jlbSDT))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5_tg_muon)
                        .addGap(18, 18, 18)
                        .addComponent(jlbThoiGianMuon))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4_mssv_pm)
                        .addGap(18, 18, 18)
                        .addComponent(jlbMSSV))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3_name_pm)
                        .addGap(18, 18, 18)
                        .addComponent(jlbTenSV))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1_name_phong)
                        .addGap(18, 18, 18)
                        .addComponent(jlbPhong))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel_tt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(97, 97, 97))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel6_tg_tra)
                            .addGap(80, 80, 80)
                            .addComponent(jlbHan)
                            .addGap(52, 52, 52))))
                .addGap(125, 125, 125))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1_name_phong)
                    .addComponent(jlbPhong))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3_name_pm)
                    .addComponent(jlbTenSV))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4_mssv_pm)
                    .addComponent(jlbMSSV))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15_sdt_pm)
                    .addComponent(jlbSDT))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17_email_pm)
                    .addComponent(jlbEmail))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5_tg_muon)
                    .addComponent(jlbThoiGianMuon))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6_tg_tra)
                    .addComponent(jlbHan))
                .addGap(18, 18, 18)
                .addComponent(jLabel_tt, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addGap(66, 66, 66))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jlabel_micro.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_micro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/keyboard_voice.png"))); // NOI18N
        jlabel_micro.setText("Micro");

        jlabel_Remote.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_Remote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/remote_gen.png"))); // NOI18N
        jlabel_Remote.setText("Remote");

        jlabel_TypeC.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_TypeC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/usb.png"))); // NOI18N
        jlabel_TypeC.setText("Cáp TypeC");

        jlabel_HDMI.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_HDMI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/settings_input_hdmi.png"))); // NOI18N
        jlabel_HDMI.setText("Cáp HDMI");

        jbtn_XacNhan.setBackground(new java.awt.Color(204, 255, 204));
        jbtn_XacNhan.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jbtn_XacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/done_outline.png"))); // NOI18N
        jbtn_XacNhan.setText("Xác nhận");
        jbtn_XacNhan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_XacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_XacNhanActionPerformed(evt);
            }
        });

        jlabel_Key.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_Key.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/key.png"))); // NOI18N
        jlabel_Key.setText("Chìa Khoá");

        jPanel_Key.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_KeyLayout = new javax.swing.GroupLayout(jPanel_Key);
        jPanel_Key.setLayout(jPanel_KeyLayout);
        jPanel_KeyLayout.setHorizontalGroup(
            jPanel_KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel_KeyLayout.setVerticalGroup(
            jPanel_KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel_REMOTE.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_REMOTELayout = new javax.swing.GroupLayout(jPanel_REMOTE);
        jPanel_REMOTE.setLayout(jPanel_REMOTELayout);
        jPanel_REMOTELayout.setHorizontalGroup(
            jPanel_REMOTELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        jPanel_REMOTELayout.setVerticalGroup(
            jPanel_REMOTELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        jlabel_daymr.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlabel_daymr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/key.png"))); // NOI18N
        jlabel_daymr.setText("Dây Micro");

        jPanel_DayMicro.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_DayMicroLayout = new javax.swing.GroupLayout(jPanel_DayMicro);
        jPanel_DayMicro.setLayout(jPanel_DayMicroLayout);
        jPanel_DayMicroLayout.setHorizontalGroup(
            jPanel_DayMicroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );
        jPanel_DayMicroLayout.setVerticalGroup(
            jPanel_DayMicroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        jPanel_HDMI.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_HDMILayout = new javax.swing.GroupLayout(jPanel_HDMI);
        jPanel_HDMI.setLayout(jPanel_HDMILayout);
        jPanel_HDMILayout.setHorizontalGroup(
            jPanel_HDMILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        jPanel_HDMILayout.setVerticalGroup(
            jPanel_HDMILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        jPanel_TYPEC.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_TYPECLayout = new javax.swing.GroupLayout(jPanel_TYPEC);
        jPanel_TYPEC.setLayout(jPanel_TYPECLayout);
        jPanel_TYPECLayout.setHorizontalGroup(
            jPanel_TYPECLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        jPanel_TYPECLayout.setVerticalGroup(
            jPanel_TYPECLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        jPanel_MICRO.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_MICROLayout = new javax.swing.GroupLayout(jPanel_MICRO);
        jPanel_MICRO.setLayout(jPanel_MICROLayout);
        jPanel_MICROLayout.setHorizontalGroup(
            jPanel_MICROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        jPanel_MICROLayout.setVerticalGroup(
            jPanel_MICROLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabel_HDMI)
                    .addComponent(jPanel_HDMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabel_daymr, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel_DayMicro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlabel_Key, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jPanel_Key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabel_micro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel_MICRO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabel_Remote)
                    .addComponent(jPanel_REMOTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabel_TypeC, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel_TYPEC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jbtn_XacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlabel_micro)
                            .addComponent(jlabel_HDMI)
                            .addComponent(jlabel_TypeC))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel_MICRO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jbtn_XacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel_HDMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel_TYPEC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 22, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jlabel_Remote)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_REMOTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlabel_Key)
                            .addComponent(jlabel_daymr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel_DayMicro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_Key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel_Key.setLayout(new BoxLayout(jPanel_Key, BoxLayout.Y_AXIS));
        jPanel_REMOTE.setLayout(new BoxLayout(jPanel_REMOTE, BoxLayout.Y_AXIS));
        jPanel_DayMicro.setLayout(new BoxLayout(jPanel_DayMicro, BoxLayout.Y_AXIS));
        jPanel_HDMI.setLayout(new BoxLayout(jPanel_HDMI, BoxLayout.Y_AXIS));
        jPanel_TYPEC.setLayout(new BoxLayout(jPanel_TYPEC, BoxLayout.Y_AXIS));
        jPanel_MICRO.setLayout(new BoxLayout(jPanel_MICRO, BoxLayout.Y_AXIS));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_mssvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_mssvActionPerformed
        String sc = evt.getActionCommand();
        setmssv(sc);
    }//GEN-LAST:event_jtf_mssvActionPerformed

    private void jtf_sdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_sdtActionPerformed
        String sc = evt.getActionCommand();
        setsdt(sc);    }//GEN-LAST:event_jtf_sdtActionPerformed

    private void jbtn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_CapNhatActionPerformed
        jtf_mssv.setText(jtf_mssv.getText().trim().toUpperCase());
        if (jtf_mssv.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập MSSV");
            return;
        }
        SinhVien sv = SinhVien.getSinhVien(jtf_mssv.getText());
        if (sv == null) {
            JOptionPane.showMessageDialog(this, "Không tìm được sinh viên");
            return;
        }
        if(jtf_sdt.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Vui lòng điền số điện thoại");
            return;
        }
        if (!InputValidator.validatePhoneNumber(jtf_sdt.getText())) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ, phải là chuỗi số gồm 0 và 9 kí tự số liền kề");
            return;
        }
        
        setname(sv.getTEN());
        setmssv(sv.getMSSV());
        setsdt(jtf_sdt.getText());
        setemail(sv.getEMAIL());
        setNgayMuon_Han();
    }//GEN-LAST:event_jbtn_CapNhatActionPerformed

    private void jbtn_XacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_XacNhanActionPerformed

        if (jlbMSSV.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Điền thông tin để mượn");
            return;
        }
        if (getSelectedDevice().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hãy chọn một thiết bị để mượn");
            return;
        }
        int confirmed = JOptionPane.showConfirmDialog(this,
                "Bạn có chắc chắn xác nhận mượn",
                "Xác nhận yêu cầu",
                JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            try {
                addPhieuMuon();
                root.getPr().updateData(this);
                JOptionPane.showMessageDialog(this, "Thêm phiếu mượn thành công");
                this.dispose();
            } catch (SQLException | ParseException  ex) {
                JOptionPane.showMessageDialog(this, "Lỗi thêm thiết bị\n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jbtn_XacNhanActionPerformed
    public void themThietBi() {
        themHDMI();
        themDayMicro();
        themKey();
        themMicro();
        themRemote();
        themTypec();
    }

    public void themHDMI() {
        jcbListHDMI = new ArrayList<>();
        String maphong = jlbPhong.getText();
        String maloai = "HDMI";
        List<ThietBi> lists = new ArrayList<>();
        try {
            lists.addAll(ThietBi.getThietBi(maphong, maloai));
            lists.addAll(ThietBi.getThietBiChung(maloai));
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count < 5) {
                if (a.getTRANG_THAI().equals("1")) {
                    JCheckBox n = new JCheckBox();
                    n.setText(a.getMATB());
                    jcbListHDMI.add(n);
                    jPanel_HDMI.add(n);
                    count++;
                }
            }
        }
    }

    public void themDayMicro() {
        Jcheckbox_DAYMR = new ArrayList<>();
        String maphong = jlbPhong.getText();
        String maloai = "DMC";
        List<ThietBi> lists = new ArrayList<>();
        try {
            lists.addAll(ThietBi.getThietBi(maphong, maloai));
            lists.addAll(ThietBi.getThietBiChung(maloai));
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count < 5) {

                if (a.getTRANG_THAI().equals("1")) {
                    JCheckBox n = new JCheckBox();
                    n.setText(a.getMATB());
                    Jcheckbox_DAYMR.add(n);
                    jPanel_DayMicro.add(n);
                    count++;
                }
            }
        }

    }

    public void themKey() {
        Jcheckbox_KEY = new ArrayList<>();

        String maphong = jlbPhong.getText();
        String maloai = "KEY";
        List<ThietBi> lists;
        try {
            lists = ThietBi.getThietBi(maphong, maloai);
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count == 5) {
                break;
            }
            if (a.getTRANG_THAI().equals("1")) {
                JCheckBox n = new JCheckBox();
                n.setText(a.getMATB());
                n.setSelected(true);
                Jcheckbox_KEY.add(n);
                jPanel_Key.add(n);
                count++;
            }
        }
    }

    public void themMicro() {
        Jcheckbox_MICRO = new ArrayList<>();

        String maphong = jlbPhong.getText();
        String maloai = "MR";
        List<ThietBi> lists;
        try {
            lists = ThietBi.getThietBi(maphong, maloai);
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count == 5) {
                break;
            }
            if (a.getTRANG_THAI().equals("1")) {
                JCheckBox n = new JCheckBox();
                n.setText(a.getMATB());
                Jcheckbox_MICRO.add(n);
                jPanel_MICRO.add(n);
                count++;
            }
        }
    }

    public void themRemote() {
        Jcheckbox_REMOTE = new ArrayList<>();

        String maphong = jlbPhong.getText();
        String maloai = "RM";
        List<ThietBi> lists;
        try {
            lists = ThietBi.getThietBi(maphong, maloai);
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count == 5) {
                break;
            }
            if (a.getTRANG_THAI().equals("1")) {
                JCheckBox n = new JCheckBox();
                n.setText(a.getMATB());
                Jcheckbox_REMOTE.add(n);
                jPanel_REMOTE.add(n);
                count++;
            }
        }
    }

    public void themTypec() {
        Jcheckbox_TYPEC = new ArrayList<>();

        String maphong = jlbPhong.getText();
        String maloai = "TYPEC";
        List<ThietBi> lists = new ArrayList<>();
        try {
            lists.addAll(ThietBi.getThietBi(maphong, maloai));
            lists.addAll(ThietBi.getThietBiChung(maloai));
        } catch (Exception e) {
            System.out.println("An error occurred while retrieving the data from the database: " + e.getMessage());
            return;
        }
        int count = 0;
        for (ThietBi a : lists) {
            if (count < 5) {

                if (a.getTRANG_THAI().equals("1")) {
                    JCheckBox n = new JCheckBox();
                    n.setText(a.getMATB());
                    Jcheckbox_TYPEC.add(n);
                    jPanel_TYPEC.add(n);
                    count++;
                }
            }
        }
    }

    public List<String> getSelectedDevice() {
        List<String> list = new ArrayList<>();

        for (JCheckBox a : jcbListHDMI) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }
        for (JCheckBox a : Jcheckbox_KEY) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }
        for (JCheckBox a : Jcheckbox_MICRO) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }
        for (JCheckBox a : Jcheckbox_REMOTE) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }
        for (JCheckBox a : Jcheckbox_TYPEC) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }
        for (JCheckBox a : Jcheckbox_DAYMR) {
            if (a.isSelected()) {
                list.add(a.getText());
            }
        }

        return list;

    }

    public void sethan(String sc) {
        this.jlbHan.setText(sc);
    }

    public void setname(String sc) {
        this.jlbTenSV.setText(sc);
    }

    public void setmssv(String sc) {
        this.jlbMSSV.setText(sc.toUpperCase());
    }

    public void setsdt(String sc) {
        this.jlbSDT.setText(sc);
    }

    public void setemail(String email) {
        jlbEmail.setText(email);
    }

    public void setTenPhong(String str) {
        this.jlbPhong.setText(str);
    }

    public void setNgayMuon_Han() {
        // Set ngày mượn
        SimpleDateFormat formatter = new SimpleDateFormat("HH:mm dd/MM/yyyy");
        String dateString = formatter.format(new Date());
        this.jlbThoiGianMuon.setText(dateString);

        // Set hạn trả
        Calendar cal = Calendar.getInstance();
        int hour = cal.get(Calendar.HOUR_OF_DAY);

        String sc = (String) jcmbHan.getSelectedItem();

        if (hour < 11) {
            switch (sc) {
                case "11:00":
                    formatter = new SimpleDateFormat("11:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
                case "17:00":
                    formatter = new SimpleDateFormat("17:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
                default:
                    formatter = new SimpleDateFormat("21:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
            }
        } else if (hour < 17) {
            switch (sc) {
                case "11:00":
                    formatter = new SimpleDateFormat("11:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
                case "17:00":
                    formatter = new SimpleDateFormat("17:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
                default:
                    formatter = new SimpleDateFormat("21:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
            }
        } else if (hour < 21) {
            switch (sc) {
                case "11:00":
                    formatter = new SimpleDateFormat("11:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
                case "17:00":
                    formatter = new SimpleDateFormat("17:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
                default:
                    formatter = new SimpleDateFormat("21:00 dd/MM/yyyy");
                    dateString = formatter.format(new Date());
                    break;
            }
        } else {
            switch (sc) {
                case "11:00":
                    formatter = new SimpleDateFormat("11:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
                case "17:00":
                    formatter = new SimpleDateFormat("17:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
                default:
                    formatter = new SimpleDateFormat("21:00 dd/MM/yyyy");
                    cal.add(Calendar.DATE, 1);
                    dateString = formatter.format(cal.getTime());
                    break;
            }
        }
        jlbHan.setText(dateString);
    }

    public void addPhieuMuon() throws SQLException, ParseException {
        PreparedStatement stmt;
        Connection conn;

        java.sql.Timestamp lap = null, han = null;

        conn = DatabaseHelper.getConnection();
        SimpleDateFormat formatter = new SimpleDateFormat("HH:mm dd/MM/yyyy");
        java.sql.Timestamp timestampThoiDiemLap = new java.sql.Timestamp(formatter.parse(jlbThoiGianMuon.getText()).getTime());
        java.sql.Timestamp timestampHan = new java.sql.Timestamp(formatter.parse(jlbHan.getText()).getTime());

        String phong = jlbPhong.getText();
        lap = timestampThoiDiemLap;
        han = timestampHan;
        // Tạo câu lệnh SQL INSERT
        String sql = "INSERT INTO PHIEUMUON (THOIDIEMLAP, HAN, MANV, MAPHONG, TRANGTHAI) VALUES (?, ?, ?, ?, ?)";
        stmt = conn.prepareStatement(sql);
        stmt.setTimestamp(1, timestampThoiDiemLap);
        stmt.setTimestamp(2, timestampHan);
        stmt.setString(3, tentk);
        stmt.setString(4, phong);
        stmt.setInt(5, 6);
        stmt.executeUpdate();
        stmt.close();
        conn.close();

        Connection conn2;
        PreparedStatement stmt2;

        conn2 = DatabaseHelper.getConnection();
        sql = "SELECT MAPM FROM PHIEUMUON WHERE TRANGTHAI = 6 AND MAPHONG = ?";
        stmt2 = conn2.prepareStatement(sql);
        stmt2.setString(1, phong);
        ResultSet rs = stmt2.executeQuery();
        String mapm = "";
        if (rs.next()) {
            mapm = rs.getString("MAPM");
            conn2.close();

            for (String matb : getSelectedDevice()) {
                try {
                    addCTPhieuMuon(matb, mapm);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Lỗi", ERROR);
                    return;
                }
            }
        }
    }

    public void addCTPhieuMuon(String MaTB, String MaPM) throws SQLException {
        PreparedStatement stmt;
        Connection conn;
        String Mssv = jlbMSSV.getText();

        conn = DatabaseHelper.getConnection();
        String MaTrangThai = "6";
        String Sdt = jlbSDT.getText();

        String sql = "INSERT INTO CTPHIEUMUON (MAPM, MATB, TRANGTHAI, MSSV, SDT) VALUES (?, ?, ?, ?, ?)";

        stmt = conn.prepareStatement(sql);

        // Thiết lập giá trị cho các tham số của câu lệnh SQL INSERT
        stmt.setString(1, MaPM);
        stmt.setString(2, MaTB);
        stmt.setString(3, MaTrangThai);
        stmt.setString(4, Mssv);
        stmt.setString(5, Sdt);

        // Thực hiện câu lệnh SQL INSERT
        stmt.executeUpdate();
        stmt.close();
        conn.close();
    }

    private TCPanel root;
    private final String tentk;
    private List<JCheckBox> jcbListHDMI;
    private List<JCheckBox> Jcheckbox_KEY;
    private List<JCheckBox> Jcheckbox_REMOTE;
    private List<JCheckBox> Jcheckbox_TYPEC;
    private List<JCheckBox> Jcheckbox_MICRO;
    private List<JCheckBox> Jcheckbox_DAYMR;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12_mssv;
    private javax.swing.JLabel jLabel13_sdt;
    private javax.swing.JLabel jLabel15_sdt_pm;
    private javax.swing.JLabel jLabel17_email_pm;
    private javax.swing.JLabel jLabel1_name_phong;
    private javax.swing.JLabel jLabel3_name_pm;
    private javax.swing.JLabel jLabel4_mssv_pm;
    private javax.swing.JLabel jLabel5_tg_muon;
    private javax.swing.JLabel jLabel6_tg_tra;
    private javax.swing.JLabel jLabel_tt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_DayMicro;
    private javax.swing.JPanel jPanel_HDMI;
    private javax.swing.JPanel jPanel_Key;
    private javax.swing.JPanel jPanel_MICRO;
    private javax.swing.JPanel jPanel_REMOTE;
    private javax.swing.JPanel jPanel_TYPEC;
    private javax.swing.JButton jbtn_CapNhat;
    private javax.swing.JButton jbtn_XacNhan;
    private javax.swing.JComboBox<String> jcmbHan;
    private javax.swing.JLabel jlabel_HDMI;
    private javax.swing.JLabel jlabel_Key;
    private javax.swing.JLabel jlabel_Remote;
    private javax.swing.JLabel jlabel_TypeC;
    private javax.swing.JLabel jlabel_daymr;
    private javax.swing.JLabel jlabel_micro;
    private javax.swing.JLabel jlbEmail;
    private javax.swing.JLabel jlbHan;
    private javax.swing.JLabel jlbMSSV;
    private javax.swing.JLabel jlbPhong;
    private javax.swing.JLabel jlbSDT;
    private javax.swing.JLabel jlbTenSV;
    private javax.swing.JLabel jlbThoiGianMuon;
    private javax.swing.JTextField jtf_mssv;
    private javax.swing.JTextField jtf_sdt;
    // End of variables declaration//GEN-END:variables
}
