package view;

import dao.DAO;
import database.PhieuMuon;
import database.PhongHoc;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import view.QLPM.LapPhieuMuon;
import view.QLPM.MuonThemTB;
import view.QLPM.TraTB;

/**
 *
 * @author henry
 */
public class TCPanel extends javax.swing.JPanel {

    public TCPanel(NhanVienPanel pr) {
        initComponents();

        this.pr = pr;
        this.tentk = pr.getUserName();
        refresh();
    }

    public void refresh() {
        jlbPhongHoc.setText("");
        jLabel_tt.setText("");
        jtfTimKiem.setText("");
        jbtnMuon.setEnabled(false);
        jbtnTra.setEnabled(false);
        initPhongBtns();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jtfTimKiem = new javax.swing.JTextField();
        jLabel1_timkiem = new javax.swing.JLabel();
        jlbPhongHoc = new javax.swing.JLabel();
        jbtnMuon = new javax.swing.JButton();
        jLabel_tt = new javax.swing.JLabel();
        jbtnTra = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jpnMain = new javax.swing.JPanel();

        setBackground(new java.awt.Color(153, 153, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtfTimKiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiemKeyReleased(evt);
            }
        });

        jLabel1_timkiem.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1_timkiem.setText("Tìm Kiếm");

        jlbPhongHoc.setBackground(new java.awt.Color(153, 255, 51));
        jlbPhongHoc.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jlbPhongHoc.setForeground(new java.awt.Color(153, 153, 153));
        jlbPhongHoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/local_library.png"))); // NOI18N
        jlbPhongHoc.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(0, 0, 0)));

        jbtnMuon.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jbtnMuon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/real_estate_agent.png"))); // NOI18N
        jbtnMuon.setText("Mượn");
        jbtnMuon.setEnabled(false);
        jbtnMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMuonActionPerformed(evt);
            }
        });

        jbtnTra.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jbtnTra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictrue/autorenew.png"))); // NOI18N
        jbtnTra.setText("Trả");
        jbtnTra.setEnabled(false);
        jbtnTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1_timkiem)
                .addGap(18, 18, 18)
                .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(jLabel_tt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jlbPhongHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jlbPhongHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtfTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel_tt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1_timkiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnMain.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jpnMainLayout = new javax.swing.GroupLayout(jpnMain);
        jpnMain.setLayout(jpnMainLayout);
        jpnMainLayout.setHorizontalGroup(
            jpnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1179, Short.MAX_VALUE)
        );
        jpnMainLayout.setVerticalGroup(
            jpnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jpnMain);
        jpnMain.setLayout(new GridLayout(0, 4)); // 0 là số hàng không giới hạn, 2 là số cột.
        jpnMain.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Tạo khoảng cách giữa viền JPanel và các thành phần bên trong

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1108, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
        );

        jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMuonActionPerformed

        String check = "";
        try {
            check = PhongHoc.getTT(jlbPhongHoc.getText());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi mượn\n" + ex.getMessage());
            return;
        }
        if (check.equals("3")) {
            LapPhieuMuon tmp = new LapPhieuMuon(this);
        } else {
            MuonThemTB tmp = new MuonThemTB(this);
        }

    }//GEN-LAST:event_jbtnMuonActionPerformed

    private void jbtnTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTraActionPerformed
        TraTB tmp = new TraTB(this);
    }//GEN-LAST:event_jbtnTraActionPerformed

    private void jtfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiemKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            timkiem();
        }
    }//GEN-LAST:event_jtfTimKiemKeyReleased

    public void initPhongBtns() {
        jpnMain.removeAll();
        jpnMain.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jpnMain);
        jpnMain.setLayout(new GridLayout(0, 4)); // 0 là số hàng không giới hạn, 4 là số cột.
        jpnMain.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Thêm padding

        listphonghoc = new ArrayList<>();
        try {
            List<PhongHoc> list = PhongHoc.getAllPhongHoc();
            listphonghoc.addAll(list);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Trang chủ lỗi " + e.getMessage());
            return;
        }

        JbuttonPhonghoc = new ArrayList<>();
        for (PhongHoc a : listphonghoc) {
            JButton btn = new JButton();
            btn.setText(a.getMAPHONG());
            JbuttonPhonghoc.add(btn);
        }
        Font font = new Font("Arial", Font.BOLD, 40);
        for (JButton btn : JbuttonPhonghoc) {
            String check = "";

            try {
                check = PhongHoc.getTT(btn.getText());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                return;
            }

            switch (check) {
                case "3": // btn phòng khả dụng
                    btn.setBackground(new java.awt.Color(147, 226, 193));

                    btn.addActionListener((ActionEvent e) -> {
                        String sc = e.getActionCommand();
                        jlbPhongHoc.setText(sc);
                        jLabel_tt.setText("Phòng: " + sc + " khả dụng");
                        jbtnMuon.setEnabled(true);
                        jbtnTra.setEnabled(false);
                    });
                    break;
                case "4": // btn phòng đang mượn
                    String sql = "Select HAN From PHIEUMUON WHERE MAPHONG = '" + btn.getText() + "' AND TRANGTHAI = 6";
                    ResultSet rs = DAO.executeSelectSp(sql);
                    // Kiểm trả phòng mượn quá hạn chưa
                    try {
                        if (rs.next()) {
                            if (isQuaHan(rs.getTimestamp("HAN"))) {
                                btn.setBackground(new java.awt.Color(255, 204, 102));

                                btn.addActionListener((ActionEvent e) -> {
                                    String sc = e.getActionCommand();
                                    jlbPhongHoc.setText(sc);
                                    jLabel_tt.setText("Phòng: " + sc + " đang quá hạn");
                                    jbtnMuon.setEnabled(false);
                                    jbtnTra.setEnabled(true);
                                });
                                break;
                            } else {
                                btn.setBackground(new java.awt.Color(106, 209, 214));

                                btn.addActionListener((ActionEvent e) -> {
                                    String sc = e.getActionCommand();
                                    jlbPhongHoc.setText(sc);
                                    jLabel_tt.setText("Phòng: " + sc + " đang mượn");
                                    jbtnMuon.setEnabled(true);
                                    jbtnTra.setEnabled(true);
                                });
                                break;
                            }
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }

                default: // btn phòng đang bảo trì
                    btn.setBackground(new java.awt.Color(204, 204, 204));

                    btn.addActionListener((ActionEvent e) -> {
                        String sc = e.getActionCommand();
                        jlbPhongHoc.setText(sc);
                        jLabel_tt.setText("Phòng: " + sc + " đang bảo trì!");
                        jbtnMuon.setEnabled(false);
                        jbtnTra.setEnabled(false);
                    });
                    break;
            }
            btn.setFont(font);
            btn.setForeground(new java.awt.Color(255, 255, 255));
            btn.setPreferredSize(new Dimension(200, 200));
            jpnMain.add(btn);
        }
    }

    public void timkiem() {
        String text = jtfTimKiem.getText().toUpperCase();
        initPhongBtns();
        for (JButton btn : JbuttonPhonghoc) {
            if (!btn.getText().toUpperCase().contains(text)) {
                jpnMain.remove(btn);
            }
        }
    }

    public boolean isQuaHan(Timestamp han) {
        Date today = new Date();
        Timestamp currentTime = new Timestamp(today.getTime());
        return (currentTime.compareTo(han) > 0);
    }

    

    private NhanVienPanel pr;
    private MuonThemTB Muon_Them;
    private String tentk;
    private boolean check = true;
    private List<JButton> JbuttonPhonghoc;
    private List<PhongHoc> listphonghoc;
    private TraTB Tra_Phong_Hoc;
    private LapPhieuMuon Muon_Phong_Hoc;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1_timkiem;
    private javax.swing.JLabel jLabel_tt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnMuon;
    private javax.swing.JButton jbtnTra;
    private javax.swing.JLabel jlbPhongHoc;
    private javax.swing.JPanel jpnMain;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables

    public String getTk() {
        return this.tentk;
    }
    
    public NhanVienPanel getPr() {
        return pr;
    }

    public String getPhongHocLabel() {
        return this.jlbPhongHoc.getText();
    }
}
